//: [Previous](@previous)
/*:
 # 値を更新できない変数
 */
/*:
 健康管理アプリケーションを作る場合、ユーザの身体情報を扱うことになります。
 生年月日や血液型、身長と体重も考えられます。
 例えば、次のような変数オブジェクトを定義するかもしれません。
 
 ````
 var birthYear = 1981
 var bloodType = "B"
 var height = 176.5
 var weight = 61.8
 ````
 これら4つのオブジェクトは大きく分けて、2つの性格に区別できます。
 
 - プログラムを通して、値は変更されない
 - プログラムが実行される間に、値が変更されるかもしれない。
 */
let birthYear = 1981
let bloodType = "B"
var height = 176.5
var weight = 61.8


/*:
 `birthYear` と `bloodType` は、誤って値を更新できないように保護されるべき。
 値が変更できない `変数` を宣言するには、`let` キーワードを使う。
 コードを修正
 
 ````
 let birthYear = 1981
 let bloodType = "B"
 ````
 `let` キーワードで宣言されたオブジェクトは `定数` という。
 定数オブジェクトの値を変更しようとすると...
 
 ````
 birthYear = 2000
 bloodType = "A"
 ````
 エラーになる
 コメントアウトしておく
 */
//birthYear = 2000
//bloodType = "A"

/*:
 定数オブジェクトは、プログラム全体を通して `値を意図しない変更` から保護してくれる。
 オブジェクトは必ず、定数オブジェクトとして宣言すべき。
 必要に応じて変数に修正すれば、安全なプログラムを構築できる。
 */
//: [Next](@next)
